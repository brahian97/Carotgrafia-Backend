package com.amapearte.modelo;
// Generated 5/08/2017 04:28:14 PM by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Artista generated by hbm2java
 */
@Entity
@Table(name = "artista", schema = "public")
public class Artista implements java.io.Serializable {
	@NotNull(message="La identificaci�n del artista  no puede ser nula")
	private int idartista;
	@NotNull(message="La identificaci�n_usuario del artista  no puede ser nula")
	private Usuario usuario;
	@NotNull(message="El profesion es obligatorio")
	@Size(min = 1, max = 50,message="El numero de caracteres maximo para la profesio debe ser de 50")
	private String profesion;
	@NotNull(message="El interes amapearte es obligatorio")
	@Size(min = 1,message="Obligatiro llenar interes amapearte")
	private String interesamapearte;
	@NotNull(message="El nombre es obligatorio")
	@Size(min = 5,message="caracteres minimo para interes amapearte es de 5")
	private String sexo;
	
	private Set<ExpresionAutor> expresionAutors = new HashSet<ExpresionAutor>(0);
	private Set<Biografia> biografias = new HashSet<Biografia>(0);
	private Set<Portafolio> portafolios = new HashSet<Portafolio>(0);
	private Set<ArteInteresArtista> arteInteresArtistas = new HashSet<ArteInteresArtista>(0);
	private Set<ArtistaGrupo> artistaGrupos = new HashSet<ArtistaGrupo>(0);

	public Artista() {
	}

	public Artista(int idartista, String profesion) {
		this.idartista = idartista;
		this.profesion = profesion;
	}

	public Artista(int idartista, Usuario usuario, String profesion, String interesamapearte, String sexo,
			Set<ExpresionAutor> expresionAutors, Set<Biografia> biografias, Set<Portafolio> portafolios,
			Set<ArteInteresArtista> arteInteresArtistas, Set<ArtistaGrupo> artistaGrupos) {
		this.idartista = idartista;
		this.usuario = usuario;
		this.profesion = profesion;
		this.interesamapearte = interesamapearte;
		this.sexo = sexo;
		this.expresionAutors = expresionAutors;
		this.biografias = biografias;
		this.portafolios = portafolios;
		this.arteInteresArtistas = arteInteresArtistas;
		this.artistaGrupos = artistaGrupos;
	}

	@Id
	@Column(name = "idartista", unique = true, nullable = false)
	public int getIdartista() {
		return this.idartista;
	}

	public void setIdartista(int idartista) {
		this.idartista = idartista;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "profesion", nullable = false, length = 50)
	public String getProfesion() {
		return this.profesion;
	}

	public void setProfesion(String profesion) {
		this.profesion = profesion;
	}

	@Column(name = "interesamapearte")
	public String getInteresamapearte() {
		return this.interesamapearte;
	}

	public void setInteresamapearte(String interesamapearte) {
		this.interesamapearte = interesamapearte;
	}

	@Column(name = "sexo", length = 1)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artista")
	public Set<ExpresionAutor> getExpresionAutors() {
		return this.expresionAutors;
	}

	public void setExpresionAutors(Set<ExpresionAutor> expresionAutors) {
		this.expresionAutors = expresionAutors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artista")
	public Set<Biografia> getBiografias() {
		return this.biografias;
	}

	public void setBiografias(Set<Biografia> biografias) {
		this.biografias = biografias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artista")
	public Set<Portafolio> getPortafolios() {
		return this.portafolios;
	}

	public void setPortafolios(Set<Portafolio> portafolios) {
		this.portafolios = portafolios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artista")
	public Set<ArteInteresArtista> getArteInteresArtistas() {
		return this.arteInteresArtistas;
	}

	public void setArteInteresArtistas(Set<ArteInteresArtista> arteInteresArtistas) {
		this.arteInteresArtistas = arteInteresArtistas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artista")
	public Set<ArtistaGrupo> getArtistaGrupos() {
		return this.artistaGrupos;
	}

	public void setArtistaGrupos(Set<ArtistaGrupo> artistaGrupos) {
		this.artistaGrupos = artistaGrupos;
	}

}
