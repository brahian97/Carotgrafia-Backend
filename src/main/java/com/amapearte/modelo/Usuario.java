package com.amapearte.modelo;
// Generated 5/08/2017 04:28:14 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Email;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", schema = "public")
public class Usuario implements java.io.Serializable {
	@NotNull(message="El idusuario es obligatorio")	
	private int idusuario;
	@NotNull(message="El pais es obligatorio")		
	private Pais pais;
	@NotNull(message="El rol es obligatorio")		
	private Rol rol;
	@NotNull(message="El nombre es obligatorio")	
	@Size(min = 1,max=255,message="Minimo de caracteres es 1 y maximo 255 para el nombre")
	private String nombre;
	@NotNull(message="La fecha de nacimiento es obligatorio")		
	private Date fechanacimiento;
	@NotNull(message="La contrase�a es obligatorio")	
	@Size(min = 5,max=20,message="Minimo de caracteres es 5 y maximo 20 para la contrase�a")
	private String contrasena;
	@Email(message="El mail no tiene un formato valido")
	@NotNull(message="El mail es obligatorio")
	@Size(min = 1, max = 255,message="El numero de caracteres maximo para el mail debe ser de 255")
	private String correo;
	@NotNull(message="El publicorreo es obligatorio")		
	private boolean publicorreo;
	@NotNull(message="El telefono es obligatorio")	
	@Size(min = 5,max=20,message="Minimo de caracteres es 5 y maximo 20 para el telefono")
	private String telefono;
	@NotNull(message="El publitel es obligatorio")		
	private boolean publitel;
	@NotNull(message="La foto es obligatorio")	
	@Size(min = 1,max=255,message="Minimo de caracteres es 1 y maximo 255 para foto artista")
	private String fotoartista;
	private Set<Artista> artistas = new HashSet<Artista>(0);
	private Set<OpinionUsuario> opinionUsuarios = new HashSet<OpinionUsuario>(0);
	private Set<Comentario> comentarios = new HashSet<Comentario>(0);
	private Set<ReferenciaObraUsuario> referenciaObraUsuarios = new HashSet<ReferenciaObraUsuario>(0);
	private Set<Ruta> rutas = new HashSet<Ruta>(0);

	public Usuario() {
	}

	public Usuario(int idusuario, String nombre, Date fechanacimiento, String contrasena, String correo,
			boolean publicorreo, String telefono, boolean publitel, String fotoartista) {
		this.idusuario = idusuario;
		this.nombre = nombre;
		this.fechanacimiento = fechanacimiento;
		this.contrasena = contrasena;
		this.correo = correo;
		this.publicorreo = publicorreo;
		this.telefono = telefono;
		this.publitel = publitel;
		this.fotoartista = fotoartista;
	}

	public Usuario(int idusuario, Pais pais, Rol rol, String nombre, Date fechanacimiento, String contrasena,
			String correo, boolean publicorreo, String telefono, boolean publitel, String fotoartista,
			Set<Artista> artistas, Set<OpinionUsuario> opinionUsuarios, Set<Comentario> comentarios,
			Set<ReferenciaObraUsuario> referenciaObraUsuarios, Set<Ruta> rutas) {
		this.idusuario = idusuario;
		this.pais = pais;
		this.rol = rol;
		this.nombre = nombre;
		this.fechanacimiento = fechanacimiento;
		this.contrasena = contrasena;
		this.correo = correo;
		this.publicorreo = publicorreo;
		this.telefono = telefono;
		this.publitel = publitel;
		this.fotoartista = fotoartista;
		this.artistas = artistas;
		this.opinionUsuarios = opinionUsuarios;
		this.comentarios = comentarios;
		this.referenciaObraUsuarios = referenciaObraUsuarios;
		this.rutas = rutas;
	}

	@Id

	@Column(name = "idusuario", unique = true, nullable = false)
	public int getIdusuario() {
		return this.idusuario;
	}

	public void setIdusuario(int idusuario) {
		this.idusuario = idusuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpais")
	public Pais getPais() {
		return this.pais;
	}

	public void setPais(Pais pais) {
		this.pais = pais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idrol")
	public Rol getRol() {
		return this.rol;
	}

	public void setRol(Rol rol) {
		this.rol = rol;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechanacimiento", nullable = false, length = 13)
	public Date getFechanacimiento() {
		return this.fechanacimiento;
	}

	public void setFechanacimiento(Date fechanacimiento) {
		this.fechanacimiento = fechanacimiento;
	}

	@Column(name = "contrasena", nullable = false, length = 20)
	public String getContrasena() {
		return this.contrasena;
	}

	public void setContrasena(String contrasena) {
		this.contrasena = contrasena;
	}

	@Column(name = "correo", nullable = false)
	public String getCorreo() {
		return this.correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	@Column(name = "publicorreo", nullable = false)
	public boolean isPublicorreo() {
		return this.publicorreo;
	}

	public void setPublicorreo(boolean publicorreo) {
		this.publicorreo = publicorreo;
	}

	@Column(name = "telefono", nullable = false, length = 20)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "publitel", nullable = false)
	public boolean isPublitel() {
		return this.publitel;
	}

	public void setPublitel(boolean publitel) {
		this.publitel = publitel;
	}

	@Column(name = "fotoartista", nullable = false)
	public String getFotoartista() {
		return this.fotoartista;
	}

	public void setFotoartista(String fotoartista) {
		this.fotoartista = fotoartista;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Artista> getArtistas() {
		return this.artistas;
	}

	public void setArtistas(Set<Artista> artistas) {
		this.artistas = artistas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<OpinionUsuario> getOpinionUsuarios() {
		return this.opinionUsuarios;
	}

	public void setOpinionUsuarios(Set<OpinionUsuario> opinionUsuarios) {
		this.opinionUsuarios = opinionUsuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Comentario> getComentarios() {
		return this.comentarios;
	}

	public void setComentarios(Set<Comentario> comentarios) {
		this.comentarios = comentarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<ReferenciaObraUsuario> getReferenciaObraUsuarios() {
		return this.referenciaObraUsuarios;
	}

	public void setReferenciaObraUsuarios(Set<ReferenciaObraUsuario> referenciaObraUsuarios) {
		this.referenciaObraUsuarios = referenciaObraUsuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Ruta> getRutas() {
		return this.rutas;
	}

	public void setRutas(Set<Ruta> rutas) {
		this.rutas = rutas;
	}

}
